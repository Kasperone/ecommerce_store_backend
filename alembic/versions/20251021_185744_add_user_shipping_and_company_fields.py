"""Add user shipping address and company fields, make name and phone required

Revision ID: 20251021_185744
Revises: 469adbefe6b0
Create Date: 2025-10-21 18:57:44.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20251021_185744'
down_revision: Union[str, None] = '469adbefe6b0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Roles are already in uppercase format, no conversion needed
    # Set default values for existing users' required fields if they are NULL
    op.execute("UPDATE users SET first_name = 'Unknown' WHERE first_name IS NULL")
    op.execute("UPDATE users SET last_name = 'User' WHERE last_name IS NULL")
    op.execute("UPDATE users SET phone = '000000000' WHERE phone IS NULL")
    
    # Make first_name, last_name, phone NOT NULL (they were nullable=True before)
    op.alter_column('users', 'first_name', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('users', 'last_name', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('users', 'phone', nullable=False, existing_type=sa.String(length=20))
    
    # Add shipping address fields (optional)
    op.add_column('users', sa.Column('shipping_street', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('shipping_city', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('shipping_postal_code', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('shipping_country', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('shipping_state', sa.String(length=100), nullable=True))
    
    # Add company/invoice fields (optional)
    op.add_column('users', sa.Column('company_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('company_tax_id', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('company_address_street', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('company_address_city', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('company_address_postal_code', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('company_address_country', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('company_address_state', sa.String(length=100), nullable=True))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Revert first_name, last_name, phone to nullable=True BEFORE dropping columns
    op.alter_column('users', 'phone', nullable=True, existing_type=sa.String(length=20))
    op.alter_column('users', 'last_name', nullable=True, existing_type=sa.String(length=100))
    op.alter_column('users', 'first_name', nullable=True, existing_type=sa.String(length=100))
    
    # Keep roles in uppercase format (no conversion needed in downgrade)
    
    # Remove company/invoice fields
    op.drop_column('users', 'company_address_state')
    op.drop_column('users', 'company_address_country')
    op.drop_column('users', 'company_address_postal_code')
    op.drop_column('users', 'company_address_city')
    op.drop_column('users', 'company_address_street')
    op.drop_column('users', 'company_tax_id')
    op.drop_column('users', 'company_name')
    
    # Remove shipping address fields
    op.drop_column('users', 'shipping_state')
    op.drop_column('users', 'shipping_country')
    op.drop_column('users', 'shipping_postal_code')
    op.drop_column('users', 'shipping_city')
    op.drop_column('users', 'shipping_street')
    
    # ### end Alembic commands ###